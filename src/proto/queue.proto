syntax = "proto3";
option csharp_namespace = "brqueue";
option go_package = "brqueue";

enum Priority {
    LOW = 0;
    HIGH = 1;
}

// Authenticates the single connection
message AuthenticateRequest {
    string username = 1;
    string password = 2;
}

message AuthenticateResponse {
    // True if the authentication was successful,
    // false otherwise
    bool success = 1;
}

// Puts a new message in the queue
message EnqueueRequest {
    // The actual task to enqueue
    bytes message = 1;
    // The priority of the task
    Priority priority = 2;
    // What capabilities are required to handle the task
    repeated string requiredCapabilities = 3;
}

message EnqueueResponse {
    // The id of the created task
    string id = 1;
}

// Removes a single message from the queue
message PopRequest {
    // What capabilities the client has available
    repeated string availableCapabilities = 1;
    // If the server should wait for a message to come in, before returning
    // with a response
    bool waitForMessage = 2;
}

message PopResponse {
    // True if there was a message available
    bool hadResult = 3;
    // The actual message to process
    bytes message = 1;
    // The id of the message
    // Should be returned with the acknowledge request
    string id = 2;
}

message AcknowledgeRequest {
    // The id of the message to acknowledge
    string id = 1;
}

// Returned when a message has been acknowledged
message AcknowledgeResponse {
}

message ErrorResponse {
    // What went wrong
    string message = 1;
}

// Wraps the requests for easier parsing on the socket layer
message RequestWrapper {
    int32 refId = 10;
    oneof message {
        EnqueueRequest enqueue = 1;
        PopRequest pop = 2;
        AcknowledgeRequest acknowledge = 3;
        AuthenticateRequest authenticate = 6;
    }
}

message ResponseWrapper {
    int32 refId = 10;
    oneof message {
        EnqueueResponse enqueue = 1;
        PopResponse pop = 2;
        AcknowledgeResponse acknowledge = 3;
        // If something went wrong
        ErrorResponse error = 4;
        AuthenticateResponse authenticate = 6;
    }
}